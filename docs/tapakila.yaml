openapi: 3.1.0
info:
  title: Tapakila API
  description: Tapakila API
  version: 1.0.0
servers:
  - url: 'http://localhost:8080/tapakila-api'
paths:
  /user/sign-up:
    post:
      operationId: signUp
      summary: sign-up a new account
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BaseUser"
      responses:
        201:
          description: User account created with success but not yet activated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /user/sign-in:
    post:
      operationId: signIn
      summary: log-in, to sign-in
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login"
      responses:
        201:
          description: user connected with the system and receive pairwise access-refresh token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JwtDTO"
  /user/log-out:
    post:
      operationId: logOut
      summary: log-out, disconnection
      tags:
        - User
      security:
        - bearerAuth: []
      responses:
        200:
          description: message indicates whether the user has been successfully disconnected or not
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogOutDto"

  /user/{userEmail}/refresh-token/{refreshToken}:
    get:
      operationId: refreshToken
      summary: get a new access token through a valid refresh token
      tags:
        - User
      parameters:
        - $ref: "#/components/parameters/useEmail"
        - $ref: "#/components/parameters/refreshToken"
      responses:
        201:
          description: a new access token has been created for the user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JwtDTO"
  /users:
    get:
      operationId: findAllUsers
      summary: Get all users
      tags:
        - User
      security:
        - bearerAuth: []
      x-42c-no-authentication: false
      x-roles:
        - ADMIN
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/size"
        - $ref: "#/components/parameters/username"
      responses:
        200:
          description: list of all users or filter users
          content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/User"
  /user/{userEmail}:
    get:
      operationId: findUserByEmail
      summary: search/find an user by its email
      tags:
        - User
      security:
        - bearerAuth: [ ]
      x-42c-no-authentication: false
      parameters:
        - $ref: "#/components/parameters/useEmail"
      responses:
        200:
          description: the user corresponding to the given user email
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

  /user/activate-account:
    patch:
      operationId: activateAccount
      summary: activate the user account with code activation
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ValidationCode"
      responses:
        202:
          description: the account activation has been accepted.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

  /user/update-password:
    patch:
      operationId: updateUserPassword
      summary: reset user password
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdatePassword"
      responses:
        201:
          description: the password has been updated with success, returns the user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"


components:
  parameters:
    page:
      in: query
      name: page
      required: false
      schema:
        type: integer
    size:
      in: query
      name: size
      required: false
      schema:
        type: integer
    username:
      in: query
      name: username
      required: false
      schema:
        type: string

    useEmail:
      in: path
      name: userEmail
      required: true
      schema:
        type: string
        format: email
    refreshToken:
      in: path
      name: refreshToken
      required: true
      schema:
        type: string

  schemas:
    EventCategoryDetail:
      type: object
      properties:
        id:
          type: string
          examples: ["$Ev..."]
        eventCategory:
          type: string
          enum: [MAGIC_AND_ILLUSIONS, ARTISTIC_PERFORMANCES, STREET_PERFORMANCES, CIRCUS_SHOW, VARIETY_SHOW, PUPPETRY, STORYTELLING, LIVE_CONCERT, MUSIC_FESTIVAL, DJ_SET, ORCHESTRA, OPERA_FESTIVAL, ACOUSTIC_CONCERT, JAZZ_FESTIVAL, ROCK_CONCERT, CLASSICAL_MUSIC, KARAOKE_NIGHT, MATCH, TOURNAMENT, MARATHON_AND_RACE, BATTLE, WATER_SPORTS, WINTER_SPORTS, CYCLING_RACE, TRIATHLON, EXTREME_SPORTS, EQUESTRIAN_EVENT, FITNESS_CHALLENGE, THEATER_PLAY, MUSICAL_COMEDY, OPERA, BALLET_AND_DANCE, IMPROV_THEATER, PUPPET_SHOW, CABARET, MIME_SHOW, ONE_MAN_SHOW, CHILDREN_THEATER, WORKSHOP, MASTERCLASS, SEMINAR, ONLINE_COURSE, LECTURE, HACKATHON, CODING_BOOTCAMP, LANGUAGE_EXCHANGE, PREMIERE_SCREENING, MOVIE_SCREENING, OPEN_AIR_CINEMA, FILM_FESTIVAL, DOCUMENTARY_SCREENING, CLASSIC_MOVIE_SCREENING, ANIME_SCREENING, SHORT_FILM_FESTIVAL, SILENT_MOVIE_NIGHT, ART_EXHIBITION, FAIR, SCIENCE_EXHIBITION, HISTORY_EXHIBITION, CULTURAL_TOUR, PHOTOGRAPHY_EXHIBITION, SCULPTURE_EXHIBITION, HISTORICAL_REENACTMENT, CULTURAL_WORKSHOP, CULTURAL_FESTIVAL, EXPO, CARNIVAL, GEEK_CONVENTION, FOOD_FESTIVAL, WINE_FESTIVAL, BOOK_FAIR, COMIC_CON, HARVEST_FESTIVAL, FLOWER_FESTIVAL, NIGHTCLUB_PARTY, POOL_PARTY, COSTUME_PARTY, BEACH_PARTY, THEMED_PARTY, GLOW_PARTY, SILENT_DISCO, ROOFTOP_PARTY, NEW_YEAR_EVE_PARTY, ESPORT_TOURNAMENT, GAMING_CONFERENCE, LAN_PARTY, VIDEO_GAME_RELEASE, BOARD_GAME_NIGHT, COSPLAY_EVENT, GAMING_MARATHON, VIRTUAL_REALITY_EXPO, PROFESSIONAL_FAIR, BUSINESS_CONFERENCE, STARTUP_PITCH_EVENT, CORPORATE_SOCIAL, NETWORKING_EVENT, INVESTOR_PITCH, TRADE_SHOW, CORPORATE_TRAINING, RELIGIOUS_CEREMONY, SPIRITUAL_SONGS_AND_MUSIC, PILGRIMAGE, FAITH_HEALING, SPIRITUAL_RETREAT, PRAYER_MEETING, RELIGIOUS_CONFERENCE, HOLY_DAY_CELEBRATION, WINE_TASTING, BEER_FESTIVAL, COFFEE_EXPO, COCKTAIL_WORKSHOP, CHOCOLATE_FESTIVAL, STREET_FOOD_FESTIVAL, CHARITY_GALA, CHARITY_RUN, VOLUNTEER_EVENT, FUNDRAISING_GALA, CHARITY_AUCTION, COMMUNITY_SERVICE, TRAVEL_EXPO, ADVENTURE_TOUR, EXOTIC_TRAVEL, CRUISE_EVENT, ADVENTURE_CAMP, CULTURAL_IMMERSION, FASHION_SHOW, FASHION_EXPO, FASHION_WORKSHOP, FASHION_AWARD, POP_UP_STORE, DESIGNER_SHOWCASE, TECH_CONFERENCE, GADGET_EXPO, INNOVATION_SUMMIT, AI_CONFERENCE, ROBOTICS_EXPO, CYBERSECURITY_SUMMIT, CLEANUP_EVENT, GREEN_CONFERENCE, ECO_FESTIVAL, TREE_PLANTING, SUSTAINABILITY_WORKSHOP, ECO_FRIENDLY_MARKET, KIDS_THEATER, FAMILY_CARNIVAL, CHILDREN_WORKSHOP, AMUSEMENT_PARK_EVENT, STORYTELLING_SESSION, YOGA_CLASS, MEDITATION_SESSION, HEALTH_FITNESS_CHALLENGE, WELLNESS_RETREAT, HEALTH_FAIR, BOOK_SIGNING, AUTHOR_TALK, POETRY_READING, WRITING_WORKSHOP, BOOK_CLUB_MEETING, STAND_UP_COMEDY, IMPROV_COMEDY, COMEDY_CLUB_NIGHT, SATIRE_SHOW, COMEDY_FESTIVAL, NIGHTCLUB_EVENT, LOUNGE_PARTY, NIGHTLIFE_KARAOKE_NIGHT, THEMED_NIGHT, AFTER_PARTY, HIKING_TOUR, CAMPING_EVENT, ROCK_CLIMBING, KAYAKING_TOUR, ADVENTURE_RACE, NEIGHBORHOOD_FAIR, COMMUNITY_POTLUCK, VOLUNTEER_MEETUP, SOCIAL_CLUB_EVENT, CULTURAL_EXCHANGE, HISTORICAL_TOUR, REENACTMENT_EVENT, HERITAGE_FESTIVAL, ARCHAEOLOGY_TALK, MUSEUM_NIGHT, SCIENCE_FAIR, TECH_DEMO, STEM_WORKSHOP, ASTRONOMY_NIGHT, INNOVATION_EXPO, WILDLIFE_TOUR, PET_ADOPTION_EVENT, BIRD_WATCHING, NATURE_PHOTOGRAPHY, ANIMAL_SANCTUARY_VISIT]
        description:
          type: string

    ValidationCode:
      type: object
      properties:
        email:
          type: string
          format: email
        activationCode:
          type: string
          maxLength: 9
          minLength: 9
          description: number with length 9
          example: 0953147685

    JwtDTO:
      type: object
      properties:
        email:
          type: string
          format: email
        token:
          type: string
          description: access token
        refreshToken:
          type: string

    Login :
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    LogOutDto:
      type: object
      properties:
        email:
          type: string
          format: email
        LogoutStatus:
          type: string
          enum: [ SUCCESS, ERROR ]
        LogOutStatusMessage:
          type: string
          enum: [ The user is logged out with success, The user could not be logged out ]

    UserUpdatePassword:
      type: object
      properties:
        validationCode:
          type: string
          maxLength: 9
          minLength: 9
          description: number with length 9
          example: 0953147685
        email:
          type: string
          format: email
        newPassword:
          type: string
          format: password


    BaseUser:
      type: object
      allOf:
        - $ref: "#/components/schemas/Login"
      properties:
        lastName:
          type: string
        firstName:
          type: string
        userRole:
          type: string
          enum: [ ADMIN, USER ]

    User:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseUser"
      properties:
        userStatus:
          type: boolean
        userCreatedAt:
          type: string
          format: date
        enabled:
          type: boolean
        authorities:
          type: array
          enum: [USER, ADMIN]
        favoriteEventCategories:
          type: array
          items:
            $ref: "#/components/schemas/EventCategoryDetail"
